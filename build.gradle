plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.3.12'
    id 'scala'
    id "org.jetbrains.grammarkit" version "2018.2.2"
}

apply plugin: 'org.jetbrains.grammarkit'

group 'com.jregistr'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.scala-lang:scala-library-all:2.12.7'
    testImplementation 'org.scalatest:scalatest_2.12:3.2.0-SNAP10'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

intellij {
    version '2018.3' //https://www.jetbrains.com/intellij-repository/releases
    plugins = ['org.jetbrains.idea.grammar:2017.1.6', 'PsiViewer:183.2153']
}

patchPluginXml {
    changeNotes """
      This is the initial release.<br>
      """
}

sourceSets.main.java.srcDirs = []
sourceSets.main.scala.srcDirs = ['src/main/scala', 'src/main/generated', 'src/main/java']

// import is optional to make task creation easier
import org.jetbrains.grammarkit.tasks.*

grammarKit {
    // version of IntelliJ patched JFlex (see bintray link below), Default is 1.7.0-1 
    jflexRelease = '1.7.0-1'

    // tag or short commit hash of Grammar-Kit to use (see link below). Default is 2017.1.6
    grammarKitRelease = '6452fde524'
}

task generateGraphQlLexer(type: GenerateLexer) {
    // source flex file
    source = "src/main/scala/com/jregistr/graphqllang/lexer/_GraphQlLexer.flex"

    // target directory for lexer
    targetDir = "src/main/generated/com/jregistr/graphqllang/lexer/"

    // target classname, target file will be targetDir/targetClass.java
    targetClass = "_GraphQlLexer"

    // optional, path to the task-specific skeleton file. Default: none
    skeleton = 'idea-flex.skeleton'

    // if set, plugin will remove a lexer output file before generating new one. Default: false
    purgeOldFiles = true
}


task generateGraphQlParser(type: GenerateParser) {
    // source bnf file
    source = "src/main/scala/com/jregistr/graphqllang/langdef/Graphql.bnf"

    // optional, task-specific root for the generated files. Default: none
    targetRoot = 'src/main/generated'

    // path to a parser file, relative to the targetRoot  
    pathToParser = '/com/jregistr/graphqllang/parser/GraphQlParser.java'

    // path to a directory with generated psi files, relative to the targetRoot 
    pathToPsiRoot = '/com/jregistr/graphqllang/psi'

    // if set, plugin will remove a parser output file and psi output directory before generating new ones. Default: false
    purgeOldFiles = true
}

task generateParserAndLexer(type: GradleBuild) {
    tasks = ['generateGraphQlParser', 'generateGraphQlLexer']
}